{
  "_args": [
    [
      {
        "raw": "erros@0.0.1",
        "scope": null,
        "escapedName": "erros",
        "name": "erros",
        "rawSpec": "0.0.1",
        "spec": "0.0.1",
        "type": "version"
      },
      "/Users/jaimecastignane/Desarrollo/Angular/TestProject/node_modules/bootstrapp"
    ]
  ],
  "_from": "erros@0.0.1",
  "_id": "erros@0.0.1",
  "_inCache": true,
  "_location": "/erros",
  "_npmUser": {
    "name": "yunghwakwon",
    "email": "yung.kwon@damncarousel.com"
  },
  "_npmVersion": "1.4.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "erros@0.0.1",
    "scope": null,
    "escapedName": "erros",
    "name": "erros",
    "rawSpec": "0.0.1",
    "spec": "0.0.1",
    "type": "version"
  },
  "_requiredBy": [
    "/bootstrapp"
  ],
  "_resolved": "https://registry.npmjs.org/erros/-/erros-0.0.1.tgz",
  "_shasum": "f5de1b3d5e90088bff231a52241cedb04ed8ebcf",
  "_shrinkwrap": null,
  "_spec": "erros@0.0.1",
  "_where": "/Users/jaimecastignane/Desarrollo/Angular/TestProject/node_modules/bootstrapp",
  "author": {
    "name": "Yung Hwa Kwon"
  },
  "bugs": {
    "url": "https://github.com/nowk/erros.js/issues"
  },
  "dependencies": {
    "express": "^4.1.1"
  },
  "description": "Simple express error handler",
  "devDependencies": {
    "body-parser": "^1.0.2",
    "chai": "^1.9.1",
    "jade": "^1.3.1",
    "sinon": "^1.9.1",
    "supertest": "^0.12.0"
  },
  "directories": {},
  "dist": {
    "shasum": "f5de1b3d5e90088bff231a52241cedb04ed8ebcf",
    "tarball": "https://registry.npmjs.org/erros/-/erros-0.0.1.tgz"
  },
  "homepage": "https://github.com/nowk/erros.js",
  "keywords": [
    "express",
    "error",
    "handling"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "yunghwakwon",
      "email": "yung.kwon@damncarousel.com"
    }
  ],
  "name": "erros",
  "optionalDependencies": {},
  "readme": "# Erros.js\n\nSimple Express error handler\n\n# Installation\n\n    npm install erros\n\n# Usage\n\n    var app = require('express')();\n    var erros = require('erros');\n\n    // configure your app...\n\n    app.use(erros.handler()); // should be last in the middleware stack\n\nResponds to content types:\n\n* `text/html`\n* `text/plain`\n* `application/json`\n\n---\n\nDefine your own view folder and view engine extension.\n\n    app.use(erros.handle({views: __dirname+'/views', view_ext: 'jade'}));\n\n* `views` your views directory, default `./`\n* `view_ext` view engine extension, default `jade`\n\n`Accept: text/html` will always attempt to respond with `res.render`.\n\nYour error pages should be named `5xx`.your-extension and `4xx`.your-extension for Server and Client errors respectively.\n\n---\n\nChange the default Status code.\n\n    app.use(erros.handle({default_status: 200}));\n\nStatus code will be 200, unless your error has a `status` property defining another code. Eg. use of custom Error\n\n    function MyError(msg, status) {\n      Error.captureStackTrace(this);\n      this.message = msg;\n      this.name = 'MyError';\n      this.status = status;\n    }\n\n    MyError.prototype = Object.create(Error.prototype);\n\n\n# License\n\nMIT\n\n",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/nowk/erros.js.git"
  },
  "scripts": {
    "test": "mocha test"
  },
  "version": "0.0.1"
}
